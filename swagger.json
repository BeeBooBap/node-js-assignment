{
    "openapi": "3.0.3",
    "info": {
        "title": "Testing Spotify and Nasa API Endpoints",
        "description": "Calling the Spotify and Nasa APIs",
        "version": "0.0.1"
    },
    "paths": {
        "/nasa-api/v1/apod": {
            "get": {
                "description": "Fetches the NASA image of the day",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the image of the day"
                    },
                    "400": {
                        "description": "Unable to fetch"
                    }
                }
            }
        },
        "/nasa-api/v1/mars-rover": {
            "get": {
                "description": "Fetches the NASA top image from the Mars Rover",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the top image"
                    },
                    "400": {
                        "description": "Unable to fetch"
                    }
                }
            }
        },
        "/nasa-api/v1/cme-analysis": {
            "get": {
                "description": "Fetches the NASA CME Analysis",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the CME Analysis"
                    },
                    "400": {
                        "description": "Unable to fetch"
                    }
                }
            }
        },
        "/spotify-api/v1/login": {
            "get": {
                "parameters": [
                    {
                        "name": "clientID",
                        "schema": {
                            "type": "string"
                            },
                        "description": "The client ID needed for authentication",
                        "required": false,
                        "paramType": "body"
                    },
                    {
                        "name": "clientSecret",
                        "schema": {
                            "type": "string"
                            },
                        "description": "The client secret needed for authentication",
                        "required": false,
                        "paramType": "body"
                    },
                    {
                        "name": "redirectUri",
                        "schema": {
                            "type": "string"
                            },
                        "description": "The redirect uri once authentication is done",
                        "required": false,
                        "paramType": "body"
                    },
                    {
                        "name": "scopes",
                        "schema": {
                            "type": "string"
                            },
                        "description": "The scope of authentication",
                        "required": false,
                        "paramType": "body"
                    }
                ],
                "description": "Authenticates users",
                "responses": {
                    "200": {
                        "description": "Successfully authenticated user"
                    },
                    "401": {
                        "description": "Unable to authenticate user"
                    }
                }
            }
        },
        "/spotify-api/v1/callback": {
            "get": {
                "description": "Callback page once user is authenticated",
                "responses": {
                    "200": {
                        "description": "Successfully generated access token and redirect to user-info page"
                    }
                }
            }
        },
        "/spotify-api/v1/user-info": {
            "get": {
                "description": "Returns user info",
                "responses": {
                    "200": {
                        "description": "Successfully fetched user info"
                    }
                }
            }
        },
        "/spotify-api/v1/artist": {
            "get": {
                "description": "Returns information about music post",
                "responses": {
                    "200": {
                        "description": "Successfully fetched posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "content": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/spotify-api/v1/related-artists" : {
            "get": {
                "description": "Returns information about related artists",
                "responses": {
                    "200": {
                        "description": "Successfully fetched related artists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "external_urls": {
                                                "type": "object"
                                            },
                                            "followers": {
                                                "type": "object"
                                            },
                                            "genres": {
                                                "type": "array"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "popularity": {
                                                "type": "number"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "uri": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "models": {
        "Astor": {

        }
    }
}